plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.hibernate.orm:hibernate-envers:6.4.4.Final'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Optimización para reducir el tamaño del JAR
jar {
    enabled = false
}

bootJar {
    enabled = true
    archiveClassifier = ''

    // Excluir archivos innecesarios para reducir tamaño
    exclude 'static/**'
    exclude 'templates/**'
    exclude '**/*.md'
    exclude 'org/springframework/boot/autoconfigure/web/servlet/error/**'
    exclude 'META-INF/spring-configuration-metadata.json'
    exclude 'META-INF/additional-spring-configuration-metadata.json'
    exclude '**/module-info.class'

    // Compresión máxima
    zip64 = true

    manifest {
        attributes(
                'Main-Class': 'com.example.demo.DemoProyectoApplication',
                'Start-Class': 'com.example.demo.DemoProyectoApplication'
        )
    }
}

// Configuración para builds más rápidos y compresión
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
    options.debug = false
    options.debugOptions.debugLevel = "none"
}